  Public Sub llenarGrillaEmpleado()
        DataGrids("select p.idp, p.tipo_doc, p.num_doc, p.nombre, p.apellido,p.email,p.tel,p.direccion,p.fech_nac,e.ide,e.cargo,s.ids,s.nombre sucursal from empleado e inner join persona p on p.idp = e.idp inner join sucursal s on s.ids = e.ids where estado_empleado = 't'", Principal_Empleados_dgv_empleado)

    End Sub
    Private Sub Principal_Empleados_btn_agregar_Click(sender As Object, e As EventArgs) Handles Principal_Empleados_btn_agregar.Click

        ids = executescalar("ids", "sucursal", "nombre", "" + Principal_Empleados_cmb_sucursal.SelectedValue + "")
        idp = executescalar("idp", "persona", "tipo_doc = 'C.I.' and num_doc", "" + Principal_Empleados_txb_ci.Text + "")

        If Principal_Empleados_txb_ci.Text.Length < 6 Then
            MessageBox.Show("Error : debe ingresar un número de documento válido", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Principal_clientes_txt_Verificador.Text = ""
            Return
        ElseIf Principal_empleados_txb_Nombre.Text = "" Then
            MessageBox.Show("Error : debe ingresar un nombre", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return
        ElseIf Principal_empleados_txb_Apellido.Text = "" Then
            MessageBox.Show("Error : debe ingresar un apellido", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return
        ElseIf Principal_empleados_txb_Email.Text = "" Then
            MessageBox.Show("Error : debe ingresar un mail", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return
        ElseIf Principal_empleados_txb_Tel.Text = "" Then
            MessageBox.Show("Error : debe ingresar un teléfono", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return
        ElseIf Principal_empleados_txb_Direc.Text = "" Then
            MessageBox.Show("Error : debe ingresar una dirección", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            Return
        End If


        Execute("select * from persona where num_doc = '" + Principal_Empleados_txb_ci.Text + Principal_Empleados_txb_ciVerif.Text + "' and trabaja = 't'")
        If (dt.Rows.Count > 0) Then
            MessageBox.Show("Este trabajador ya existe.")
            Return
        End If
        Execute("select * from persona where num_doc = '" + Principal_Empleados_txb_ci.Text + Principal_Empleados_txb_ciVerif.Text + "")
        If dt.Rows.Count > 0 Then
            Try
                sentenciasNonQuery("insert into empleado values (0," + idp + "" + ids + "" + Principal_Empleados_txb_Cargo.Text + ",)")
                sentenciasNonQuery("update persona set trabaja = 't' where idp = " + idp + "")
                llenarGrillaEmpleado()
                MessageBox.Show("Exito : Exito al ingresar el nuevo empleado.", "Cliente", MessageBoxButtons.OK, MessageBoxIcon.Information)
            Catch ex As OdbcException
                MessageBox.Show("Error :  No se pudo ingresar nuevo empleado.", "empleado", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End Try
            Return
        Else

            Try
                sentenciasNonQuery("insert into persona values (0,'" + Principal_Empleados_txb_ci.Text + Principal_Empleados_txb_ciVerif.Text + "','C.I.' , '" + Principal_empleados_txb_Nombre.Text + "' , '" + Principal_empleados_txb_Apellido.Text + "','" + Principal_empleados_txb_Email.Text + "'," + Principal_empleados_txb_Tel.Text + ", '" + Principal_empleados_txb_Direc.Text + "',null,null,'" + Principal_empleados_dtp_FechNac.Value.Date + "',null,null,null,'t',null) ")

                MessageBox.Show("Se ha ingresado una persona a la base de datos.")
            Catch ex As Exception
                MessageBox.Show("Error :  No se pudo ingresar la persona.", "Persona", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End Try
            idp = executescalar("idp", "persona", "tipo_doc = 'C.I.' and num_doc", "" + Principal_Empleados_txb_ci.Text + Principal_Empleados_txb_ciVerif.Text + "")
            Try
                sentenciasNonQuery("insert into empleado values (0," + idp.ToString + "," + ids + ",'" + Principal_Empleados_txb_Cargo.Text + "','t' )")
                llenarGrillaEmpleado()
                MessageBox.Show("Exito : Exito al ingresar el nuevo empleado.", "Cliente", MessageBoxButtons.OK, MessageBoxIcon.Information)

            Catch ex As OdbcException
                MessageBox.Show("Error :  No se pudo ingresar nuevo empleado.", "empleado", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End Try
            Return
        End If

    End Sub
    Private Sub Principal_empleado_btn_Modificar_Click(sender As Object, e As EventArgs) Handles Principal_empleado_btn_Modificar.Click

        ids = executescalar("ids", "sucursal", "nombre", "" + Principal_Empleados_cmb_sucursal.SelectedValue + "")
        idp = executescalar("idp", "persona", "tipo_doc = 'C.I.' and num_doc", "" + Principal_Empleados_txb_ci.Text + "")

        Try
            sentenciasNonQuery("update persona set nombre = '" + Principal_empleados_txb_Nombre.Text + "', apellido= '" + Principal_empleados_txb_Apellido.Text + "', email = '" + Principal_empleados_txb_Email.Text + "',tel = " + Principal_empleados_txb_Tel.Text + ", direccion= '" + Principal_empleados_txb_Direc.Text + "',fech_nac='" + Principal_empleados_dtp_FechNac.Value.Date + "', num_doc= '" + Principal_Empleados_txb_ci.Text + Principal_Empleados_txb_ciVerif.Text + "' where tipo_doc = 'C.I.' and num_doc = " + Principal_Empleados_dgv_empleado.CurrentRow.Cells(2).Value + "")
            MessageBox.Show("Exito : Exito al modificar los datos de la persona.", "Cliente", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Catch ex As Exception
            MessageBox.Show("Error : mo se a podido modificar los datos del empleado", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
        End Try
        Try
            sentenciasNonQuery("update empleado set idp =" + idp.ToString + ", ids = " + ids.ToString + ", cargo = '" + Principal_Empleados_txb_Cargo.Text + "' where ide = " + Principal_Empleados_dgv_empleado.CurrentRow.Cells(9).Value.ToString + "")
            llenarGrillaEmpleado()
            MessageBox.Show("Exito : Exito al modificar los datos del empleado.", "Cliente", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Catch ex As Exception
            MessageBox.Show("Error : mo se a podido modificar los datos del empleado", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
        End Try
    End Sub

    Private Sub Principal_Empleados_btn_eliminar_Click(sender As Object, e As EventArgs) Handles Principal_Empleados_btn_eliminar.Click

        Try
            sentenciasNonQuery("update persona set tranaja = 'f' where idp =" + Principal_Empleados_dgv_empleado.CurrentRow.Cells(0).Value.ToString + "")
        Catch ex As OdbcException
        End Try
        Try
            sentenciasNonQuery("update empleado set estado_empleado = 'f' where ide = " + Principal_Empleados_dgv_empleado.CurrentRow.Cells(9).Value.ToString + "")
            MessageBox.Show("Exito : Exito al eliminar al empleado.", "Empleado", MessageBoxButtons.OK, MessageBoxIcon.Information)
            llenarGrillaEmpleado()
        Catch ex As OdbcException
            MessageBox.Show("Error : se a producido un error al intentar eliminar a este empleado", "Error de ingreso", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
        End Try
    End Sub